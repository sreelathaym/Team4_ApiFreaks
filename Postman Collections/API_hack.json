{
	"info": {
		"_postman_id": "e90aca48-5c27-40ef-8616-d3c6ee42c6d2",
		"name": "Team4_ApiFreaks",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Admin",
			"item": [
				{
					"name": "UserloginWithinvalidEndpoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fb7efa7f-68e3-4c9a-bcbf-859de8e14e22",
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"const schema =\r",
									"    {\r",
									"  \r",
									"    \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"timestamp\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"status\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"error\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"path\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"timestamp\",\r",
									"    \"status\",\r",
									"    \"error\",\r",
									"    \"path\"\r",
									"  ]\r",
									"}\r",
									"pm.test(\"Response contsins valid schema data\", function () {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "ba858357-5a7b-4527-a310-ee32a3f2f43b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\": \"test\",\r\n    \"userLoginEmail\": \"Team4@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_URL}}/login123"
					},
					"response": []
				},
				{
					"name": "UserloginWithInvalidCred",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "52cafd25-3233-4977-a96c-701be6d3eeda",
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"const schema ={\r",
									"  \r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"errorCode\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"errorMessage\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"errorCode\",\r",
									"    \"errorMessage\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"Response contsins valid schema data\", function () {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "faf6b330-a2b8-41da-9d78-402bbf7e225f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\": \"abcd123\",\r\n    \"userLoginEmail\": \"xyz456@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_URL}}/login"
					},
					"response": []
				},
				{
					"name": "UserloginWithvalidEndpoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d0f80eff-ad62-4f09-b844-d07c880a9f8b",
								"exec": [
									"var resp = pm.response.json();\r",
									"pm.collectionVariables.set(\"Admin_Token\", resp.token);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"token\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"type\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"userId\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"loginUserEmail\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"roles\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": {\r",
									"        \"type\": \"string\"\r",
									"      }\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"token\",\r",
									"    \"type\",\r",
									"    \"userId\",\r",
									"    \"loginUserEmail\",\r",
									"    \"roles\"\r",
									"  ]\r",
									"}\r",
									"pm.test(\"Response contsins valid schema data\", function () {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "0bef3515-1090-4a87-89ac-688545fca8f2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\": \"test\",\r\n    \"userLoginEmail\": \"Team4@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_URL}}/login"
					},
					"response": []
				},
				{
					"name": "N-CreateDieticianInvalidendpoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f4ca442d-8e35-488a-8175-1537189fce0d",
								"exec": [
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"// pm.test(\"Status code\", function () {\r",
									"  \r",
									"//     pm.expect(pm.response.status).to.eql(pm.iterationData['statuscode'])\r",
									"// });\r",
									"\r",
									"pm.test(\"Status code\", function () {\r",
									"    pm.response.to.have.status(pm.collectionVariables.get(\"statuscode\"));\r",
									"});\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"dieticianId\",jsonData.id);\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"dieticianPsw\",jsonData.loginPassword);\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"dieticianEmail\",jsonData.Email);\r",
									"\r",
									"//validate mandatory fields are not empty\r",
									"pm.test(\"First name is not empty\", function () {\r",
									"    pm.expect(jsonData.Firstname).to.not.be.empty;\r",
									"});\r",
									"pm.test(\"Last name is not empty\", function () {\r",
									"    pm.expect(jsonData.Lastname).to.not.be.empty;\r",
									"});\r",
									"pm.test(\"Email is not empty\",function(){\r",
									"    pm.expect(jsonData.Email).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"ContactNumber is not empty\",function(){\r",
									"    pm.expect(jsonData.ContactNumber).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"DateOfBirth is not empty\",function(){\r",
									"    pm.expect(jsonData.DateOfBirth).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"Hospital name is not empty\",function(){\r",
									"    pm.expect(jsonData.HospitalName).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"HospitalStreet is not empty\",function(){\r",
									"    pm.expect(jsonData.HospitalStreet).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"City is not empty\",function(){\r",
									"    pm.expect(jsonData.HospitalCity).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"PinCode is not empty\",function(){\r",
									"    pm.expect(jsonData.HospitalPinCode).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"Education is not empty\",function(){\r",
									"    pm.expect(jsonData.Education).to.be.not.empty;\r",
									"});\r",
									"  "
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5b4459cc-18af-4817-b3fa-cb0d2835621f",
								"exec": [
									"// pm.collectionVariables.set(\"statuscode\", pm.iterationData.get('statuscode'));\r",
									"// let statuscode1 = pm.collectionVariables.get(\"statuscode\");\r",
									"// console.log(statuscode1);\r",
									"\r",
									"// if (pm.iterationData.get(\"Request\") !== 'CreateRequest') {\r",
									"//     pm.execution.skipRequest();\r",
									"// }"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "c2f26dfe-3e03-4d37-a515-216bc0d53efb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ContactNumber\": \"{{contactnumber}}\",\r\n  \"DateOfBirth\": \"{{Dateofbirth}}\",\r\n  \"Education\": \"{{education}}\",\r\n  \"Email\": \"{{email}}\",\r\n  \"Firstname\": \"{{firstname}}\",\r\n  \"HospitalCity\":\" {{hospitalcity}}\",\r\n  \"HospitalName\": \"{{hospitalname}}\",\r\n  \"HospitalPincode\": \"{{hospitalpincode}}\",\r\n  \"HospitalStreet\":\"{{hospitalstreet}}\",\r\n  \"Lastname\": \"{{lastname}}\"\r\n\r\n}\r\n\r\n// {\r\n//   \"ContactNumber\": \"7678687675\",\r\n//   \"DateOfBirth\": \"1985-06-21T00:00:00.000+00:00\",\r\n//   \"Education\": \"edu1\",\r\n//   \"Email\": \"vidhya@gmail.com\",\r\n//   \"Firstname\": \"Sri\",\r\n//   \"HospitalCity\": \"hoscit\",\r\n//   \"HospitalName\": \"hosnam\",\r\n//   \"HospitalPincode\": \"896879\",\r\n//   \"HospitalStreet\": \"hosstr\",\r\n//   \"Lastname\": \"vidhya\"\r\n\r\n// }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_URL}}/dieticianinv"
					},
					"response": []
				},
				{
					"name": "N-CreateDieticianNoAuth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f4ca442d-8e35-488a-8175-1537189fce0d",
								"exec": [
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"// pm.test(\"Status code\", function () {\r",
									"  \r",
									"//     pm.expect(pm.response.status).to.eql(pm.iterationData['statuscode'])\r",
									"// });\r",
									"\r",
									"pm.test(\"Status code\", function () {\r",
									"    pm.response.to.have.status(pm.collectionVariables.get(\"statuscode\"));\r",
									"});\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"dieticianId\",jsonData.id);\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"dieticianPsw\",jsonData.loginPassword);\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"dieticianEmail\",jsonData.Email);\r",
									"\r",
									"//validate mandatory fields are not empty\r",
									"pm.test(\"First name is not empty\", function () {\r",
									"    pm.expect(jsonData.Firstname).to.not.be.empty;\r",
									"});\r",
									"pm.test(\"Last name is not empty\", function () {\r",
									"    pm.expect(jsonData.Lastname).to.not.be.empty;\r",
									"});\r",
									"pm.test(\"Email is not empty\",function(){\r",
									"    pm.expect(jsonData.Email).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"ContactNumber is not empty\",function(){\r",
									"    pm.expect(jsonData.ContactNumber).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"DateOfBirth is not empty\",function(){\r",
									"    pm.expect(jsonData.DateOfBirth).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"Hospital name is not empty\",function(){\r",
									"    pm.expect(jsonData.HospitalName).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"HospitalStreet is not empty\",function(){\r",
									"    pm.expect(jsonData.HospitalStreet).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"City is not empty\",function(){\r",
									"    pm.expect(jsonData.HospitalCity).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"PinCode is not empty\",function(){\r",
									"    pm.expect(jsonData.HospitalPinCode).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"Education is not empty\",function(){\r",
									"    pm.expect(jsonData.Education).to.be.not.empty;\r",
									"});\r",
									"  "
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5b4459cc-18af-4817-b3fa-cb0d2835621f",
								"exec": [
									"// pm.collectionVariables.set(\"statuscode\", pm.iterationData.get('statuscode'));\r",
									"// let statuscode1 = pm.collectionVariables.get(\"statuscode\");\r",
									"// console.log(statuscode1);\r",
									"\r",
									"// if (pm.iterationData.get(\"Request\") !== 'CreateRequest') {\r",
									"//     pm.execution.skipRequest();\r",
									"// }"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "f7db1bf5-e556-4117-a945-575ea79b3608",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ContactNumber\": \"{{contactnumber}}\",\r\n  \"DateOfBirth\": \"{{Dateofbirth}}\",\r\n  \"Education\": \"{{education}}\",\r\n  \"Email\": \"{{email}}\",\r\n  \"Firstname\": \"{{firstname}}\",\r\n  \"HospitalCity\":\" {{hospitalcity}}\",\r\n  \"HospitalName\": \"{{hospitalname}}\",\r\n  \"HospitalPincode\": \"{{hospitalpincode}}\",\r\n  \"HospitalStreet\":\"{{hospitalstreet}}\",\r\n  \"Lastname\": \"{{lastname}}\"\r\n\r\n}\r\n\r\n// {\r\n//   \"ContactNumber\": \"7678687675\",\r\n//   \"DateOfBirth\": \"1985-06-21T00:00:00.000+00:00\",\r\n//   \"Education\": \"edu1\",\r\n//   \"Email\": \"vidhya@gmail.com\",\r\n//   \"Firstname\": \"Sri\",\r\n//   \"HospitalCity\": \"hoscit\",\r\n//   \"HospitalName\": \"hosnam\",\r\n//   \"HospitalPincode\": \"896879\",\r\n//   \"HospitalStreet\": \"hosstr\",\r\n//   \"Lastname\": \"vidhya\"\r\n\r\n// }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_URL}}/dietician"
					},
					"response": []
				},
				{
					"name": "N-CreateDieticianInvalidbaseurl",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f4ca442d-8e35-488a-8175-1537189fce0d",
								"exec": [
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"// pm.test(\"Status code\", function () {\r",
									"  \r",
									"//     pm.expect(pm.response.status).to.eql(pm.iterationData['statuscode'])\r",
									"// });\r",
									"\r",
									"pm.test(\"Status code\", function () {\r",
									"    pm.response.to.have.status(pm.collectionVariables.get(\"statuscode\"));\r",
									"});\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"dieticianId\",jsonData.id);\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"dieticianPsw\",jsonData.loginPassword);\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"dieticianEmail\",jsonData.Email);\r",
									"\r",
									"//validate mandatory fields are not empty\r",
									"pm.test(\"First name is not empty\", function () {\r",
									"    pm.expect(jsonData.Firstname).to.not.be.empty;\r",
									"});\r",
									"pm.test(\"Last name is not empty\", function () {\r",
									"    pm.expect(jsonData.Lastname).to.not.be.empty;\r",
									"});\r",
									"pm.test(\"Email is not empty\",function(){\r",
									"    pm.expect(jsonData.Email).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"ContactNumber is not empty\",function(){\r",
									"    pm.expect(jsonData.ContactNumber).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"DateOfBirth is not empty\",function(){\r",
									"    pm.expect(jsonData.DateOfBirth).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"Hospital name is not empty\",function(){\r",
									"    pm.expect(jsonData.HospitalName).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"HospitalStreet is not empty\",function(){\r",
									"    pm.expect(jsonData.HospitalStreet).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"City is not empty\",function(){\r",
									"    pm.expect(jsonData.HospitalCity).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"PinCode is not empty\",function(){\r",
									"    pm.expect(jsonData.HospitalPinCode).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"Education is not empty\",function(){\r",
									"    pm.expect(jsonData.Education).to.be.not.empty;\r",
									"});\r",
									"  "
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5b4459cc-18af-4817-b3fa-cb0d2835621f",
								"exec": [
									"// pm.collectionVariables.set(\"statuscode\", pm.iterationData.get('statuscode'));\r",
									"// let statuscode1 = pm.collectionVariables.get(\"statuscode\");\r",
									"// console.log(statuscode1);\r",
									"\r",
									"// if (pm.iterationData.get(\"Request\") !== 'CreateRequest') {\r",
									"//     pm.execution.skipRequest();\r",
									"// }"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "4da39381-034b-4212-b872-2712e96a898d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ContactNumber\": \"{{contactnumber}}\",\r\n  \"DateOfBirth\": \"{{Dateofbirth}}\",\r\n  \"Education\": \"{{education}}\",\r\n  \"Email\": \"{{email}}\",\r\n  \"Firstname\": \"{{firstname}}\",\r\n  \"HospitalCity\":\" {{hospitalcity}}\",\r\n  \"HospitalName\": \"{{hospitalname}}\",\r\n  \"HospitalPincode\": \"{{hospitalpincode}}\",\r\n  \"HospitalStreet\":\"{{hospitalstreet}}\",\r\n  \"Lastname\": \"{{lastname}}\"\r\n\r\n}\r\n\r\n// {\r\n//   \"ContactNumber\": \"7678687675\",\r\n//   \"DateOfBirth\": \"1985-06-21T00:00:00.000+00:00\",\r\n//   \"Education\": \"edu1\",\r\n//   \"Email\": \"vidhya@gmail.com\",\r\n//   \"Firstname\": \"Sri\",\r\n//   \"HospitalCity\": \"hoscit\",\r\n//   \"HospitalName\": \"hosnam\",\r\n//   \"HospitalPincode\": \"896879\",\r\n//   \"HospitalStreet\": \"hosstr\",\r\n//   \"Lastname\": \"vidhya\"\r\n\r\n// }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://dietician-20-api-hackathon-80f2590665cc.herokuapp.com/dietician"
					},
					"response": []
				},
				{
					"name": "CreateDietician",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f4ca442d-8e35-488a-8175-1537189fce0d",
								"exec": [
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"// pm.test(\"Status code\", function () {\r",
									"  \r",
									"//     pm.expect(pm.response.status).to.eql(pm.iterationData['statuscode'])\r",
									"// });\r",
									"\r",
									"pm.test(\"Status code\", function () {\r",
									"    pm.response.to.have.status(pm.collectionVariables.get(\"statuscode\"));\r",
									"});\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"dieticianId\",jsonData.id);\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"dieticianPsw\",jsonData.loginPassword);\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"dieticianEmail\",jsonData.Email);\r",
									"\r",
									"//validate mandatory fields are not empty\r",
									"pm.test(\"First name is not empty\", function () {\r",
									"    pm.expect(jsonData.Firstname).to.not.be.empty;\r",
									"});\r",
									"pm.test(\"Last name is not empty\", function () {\r",
									"    pm.expect(jsonData.Lastname).to.not.be.empty;\r",
									"});\r",
									"pm.test(\"Email is not empty\",function(){\r",
									"    pm.expect(jsonData.Email).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"ContactNumber is not empty\",function(){\r",
									"    pm.expect(jsonData.ContactNumber).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"DateOfBirth is not empty\",function(){\r",
									"    pm.expect(jsonData.DateOfBirth).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"Hospital name is not empty\",function(){\r",
									"    pm.expect(jsonData.HospitalName).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"HospitalStreet is not empty\",function(){\r",
									"    pm.expect(jsonData.HospitalStreet).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"City is not empty\",function(){\r",
									"    pm.expect(jsonData.HospitalCity).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"PinCode is not empty\",function(){\r",
									"    pm.expect(jsonData.HospitalPinCode).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"Education is not empty\",function(){\r",
									"    pm.expect(jsonData.Education).to.be.not.empty;\r",
									"});\r",
									"  "
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5b4459cc-18af-4817-b3fa-cb0d2835621f",
								"exec": [
									"// pm.collectionVariables.set(\"statuscode\", pm.iterationData.get('statuscode'));\r",
									"// let statuscode1 = pm.collectionVariables.get(\"statuscode\");\r",
									"// console.log(statuscode1);\r",
									"\r",
									"// if (pm.iterationData.get(\"Request\") !== 'CreateRequest') {\r",
									"//     pm.execution.skipRequest();\r",
									"// }"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "ad2cf518-7360-4663-ba0b-ac52644227cf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ContactNumber\": \"{{contactnumber}}\",\r\n  \"DateOfBirth\": \"{{Dateofbirth}}\",\r\n  \"Education\": \"{{education}}\",\r\n  \"Email\": \"{{email}}\",\r\n  \"Firstname\": \"{{firstname}}\",\r\n  \"HospitalCity\":\" {{hospitalcity}}\",\r\n  \"HospitalName\": \"{{hospitalname}}\",\r\n  \"HospitalPincode\": \"{{hospitalpincode}}\",\r\n  \"HospitalStreet\":\"{{hospitalstreet}}\",\r\n  \"Lastname\": \"{{lastname}}\"\r\n\r\n}\r\n\r\n// {\r\n//   \"ContactNumber\": \"7678687675\",\r\n//   \"DateOfBirth\": \"1985-06-21T00:00:00.000+00:00\",\r\n//   \"Education\": \"edu1\",\r\n//   \"Email\": \"vidhya@gmail.com\",\r\n//   \"Firstname\": \"Sri\",\r\n//   \"HospitalCity\": \"hoscit\",\r\n//   \"HospitalName\": \"hosnam\",\r\n//   \"HospitalPincode\": \"896879\",\r\n//   \"HospitalStreet\": \"hosstr\",\r\n//   \"Lastname\": \"vidhya\"\r\n\r\n// }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_URL}}/dietician"
					},
					"response": []
				},
				{
					"name": "CreateDietician Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f4ca442d-8e35-488a-8175-1537189fce0d",
								"exec": [
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"// pm.test(\"Status code\", function () {\r",
									"  \r",
									"//     pm.expect(pm.response.status).to.eql(pm.iterationData['statuscode'])\r",
									"// });\r",
									"\r",
									"pm.test(\"Status code\", function () {\r",
									"    pm.response.to.have.status(pm.collectionVariables.get(\"statuscode\"));\r",
									"});\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"dieticianId\",jsonData.id);\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"dieticianPsw\",jsonData.loginPassword);\r",
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"dieticianEmail\",jsonData.Email);\r",
									"\r",
									"//validate mandatory fields are not empty\r",
									"pm.test(\"First name is not empty\", function () {\r",
									"    pm.expect(jsonData.Firstname).to.not.be.empty;\r",
									"});\r",
									"pm.test(\"Last name is not empty\", function () {\r",
									"    pm.expect(jsonData.Lastname).to.not.be.empty;\r",
									"});\r",
									"pm.test(\"Email is not empty\",function(){\r",
									"    pm.expect(jsonData.Email).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"ContactNumber is not empty\",function(){\r",
									"    pm.expect(jsonData.ContactNumber).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"DateOfBirth is not empty\",function(){\r",
									"    pm.expect(jsonData.DateOfBirth).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"Hospital name is not empty\",function(){\r",
									"    pm.expect(jsonData.HospitalName).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"HospitalStreet is not empty\",function(){\r",
									"    pm.expect(jsonData.HospitalStreet).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"City is not empty\",function(){\r",
									"    pm.expect(jsonData.HospitalCity).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"PinCode is not empty\",function(){\r",
									"    pm.expect(jsonData.HospitalPinCode).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"Education is not empty\",function(){\r",
									"    pm.expect(jsonData.Education).to.be.not.empty;\r",
									"});\r",
									"  "
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5b4459cc-18af-4817-b3fa-cb0d2835621f",
								"exec": [
									"// pm.collectionVariables.set(\"statuscode\", pm.iterationData.get('statuscode'));\r",
									"// let statuscode1 = pm.collectionVariables.get(\"statuscode\");\r",
									"// console.log(statuscode1);\r",
									"\r",
									"// if (pm.iterationData.get(\"Request\") !== 'CreateRequest') {\r",
									"//     pm.execution.skipRequest();\r",
									"// }"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "e40986c2-7c4a-4759-9cba-78efafb31c00",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ContactNumber\": \"0987654321\",\r\n  \"DateOfBirth\": \"2002-07-26T18:14:08.570Z\",\r\n  \"Education\": \"gdhd\",\r\n  \"Email\": \"jk@gmail.com\",\r\n  \"Firstname\": \"hj\",\r\n  \"HospitalCity\": \"lk\",\r\n  \"HospitalName\": \"kj\",\r\n  \"HospitalPincode\": \"334567\",\r\n  \"HospitalStreet\": \"kk\",\r\n  \"Lastname\": \"jj\"\r\n \r\n}\r\n\r\n\r\n\r\n// {\r\n//   \"ContactNumber\": \"7678687675\",\r\n//   \"DateOfBirth\": \"1985-06-21T00:00:00.000+00:00\",\r\n//   \"Education\": \"edu1\",\r\n//   \"Email\": \"vidhya@gmail.com\",\r\n//   \"Firstname\": \"Sri\",\r\n//   \"HospitalCity\": \"hoscit\",\r\n//   \"HospitalName\": \"hosnam\",\r\n//   \"HospitalPincode\": \"896879\",\r\n//   \"HospitalStreet\": \"hosstr\",\r\n//   \"Lastname\": \"vidhya\"\r\n\r\n// }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_URL}}/dietician"
					},
					"response": []
				},
				{
					"name": "GetallDieticianInvalidEndpoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "07498148-ce77-40ca-8cef-60d284aebc04",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									" const schema = {\r",
									" \r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"timestamp\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"status\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"error\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"path\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"timestamp\",\r",
									"    \"status\",\r",
									"    \"error\",\r",
									"    \"path\"\r",
									"  ]\r",
									"}\r",
									"pm.test(\"Response contsins valid schema data\", function () {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "c74a4707-0a10-4766-b86d-644609f64c5e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/dietician123"
					},
					"response": []
				},
				{
					"name": "GetallDieticianInvalidBaseURI",
					"id": "9cbf65f6-4a6b-4fab-8a5d-0d40c0fa6faa",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "https://dietician1-dec1-api-hackathon-80f2590665cc.herokuapp.com/dietician/dietician"
					},
					"response": []
				},
				{
					"name": "GetallDieticianNoAuth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1054b8cb-313c-4083-a013-21a19355efff",
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"const schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"timestamp\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"status\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"error\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"path\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"timestamp\",\r",
									"    \"status\",\r",
									"    \"error\",\r",
									"    \"path\"\r",
									"  ]\r",
									"}\r",
									"pm.test(\"Response contsins valid schema data\", function () {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "a159f603-de53-4533-8873-e86f74571d8f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/dietician"
					},
					"response": []
				},
				{
					"name": "GetallDietcianinfo",
					"id": "a15bb1e6-62dd-4424-8a23-a00136223659",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/dietician"
					},
					"response": []
				},
				{
					"name": "N-UpdateDieticianNoAuth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0bc97771-a44d-41e6-8223-3230175e1671",
								"exec": [
									"pm.collectionVariables.set(\"statuscode\", pm.iterationData.get('statuscode'));\r",
									"let statuscode1 = pm.collectionVariables.get(\"statuscode\");\r",
									"console.log(statuscode1);\r",
									"\r",
									"if (pm.iterationData.get(\"Request\") !== 'UpdateRequest') {\r",
									"    pm.execution.skipRequest();\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9930ae85-9889-442f-8edf-db5e33873f0f",
								"exec": [
									"\r",
									"\r",
									"pm.test(\"Status code\", function () {\r",
									"    pm.response.to.have.status(pm.collectionVariables.get(\"statuscode\"));\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "38064c8e-25e3-4589-8cea-8462b63c026c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"id\": \"{{dieticianid}}\",\r\n  \"ContactNumber\": \"{{contactnumber}}\",\r\n  \"DateOfBirth\": \"{{Dateofbirth}}\",\r\n  \"Education\": \"{{education}}\",\r\n  \"Email\": \"{{email}}\",\r\n  \"Firstname\": \"{{firstname}}\",\r\n  \"HospitalCity\":\" {{hospitalcity}}\",\r\n  \"HospitalName\": \"{{hospitalname}}\",\r\n  \"HospitalPincode\": \"{{hospitalpincode}}\",\r\n  \"HospitalStreet\":\"{{hospitalstreet}}\",\r\n  \"Lastname\": \"{{lastname}}\"\r\n \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_URL}}/dietician/{{dieticianid}}"
					},
					"response": []
				},
				{
					"name": "N-UpdateDieticianwithinvalidbaseurl",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0bc97771-a44d-41e6-8223-3230175e1671",
								"exec": [
									"pm.collectionVariables.set(\"statuscode\", pm.iterationData.get('statuscode'));\r",
									"let statuscode1 = pm.collectionVariables.get(\"statuscode\");\r",
									"console.log(statuscode1);\r",
									"\r",
									"if (pm.iterationData.get(\"Request\") !== 'UpdateRequest') {\r",
									"    pm.execution.skipRequest();\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9930ae85-9889-442f-8edf-db5e33873f0f",
								"exec": [
									"\r",
									"\r",
									"pm.test(\"Status code\", function () {\r",
									"    pm.response.to.have.status(pm.collectionVariables.get(\"statuscode\"));\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "fb4926c6-bd76-49b0-96e4-f6ff7a0a6d08",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"id\": \"{{dieticianid}}\",\r\n  \"ContactNumber\": \"{{contactnumber}}\",\r\n  \"DateOfBirth\": \"{{Dateofbirth}}\",\r\n  \"Education\": \"{{education}}\",\r\n  \"Email\": \"{{email}}\",\r\n  \"Firstname\": \"{{firstname}}\",\r\n  \"HospitalCity\":\" {{hospitalcity}}\",\r\n  \"HospitalName\": \"{{hospitalname}}\",\r\n  \"HospitalPincode\": \"{{hospitalpincode}}\",\r\n  \"HospitalStreet\":\"{{hospitalstreet}}\",\r\n  \"Lastname\": \"{{lastname}}\"\r\n \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://dietician-20-api-hackathon-80f2590665cc.herokuapp.com/dietician2/dietician/{{dieticianid}}"
					},
					"response": []
				},
				{
					"name": "N-UpdateDieticianwithinvalidEndpoint",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0bc97771-a44d-41e6-8223-3230175e1671",
								"exec": [
									"pm.collectionVariables.set(\"statuscode\", pm.iterationData.get('statuscode'));\r",
									"let statuscode1 = pm.collectionVariables.get(\"statuscode\");\r",
									"console.log(statuscode1);\r",
									"\r",
									"if (pm.iterationData.get(\"Request\") !== 'UpdateRequest') {\r",
									"    pm.execution.skipRequest();\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9930ae85-9889-442f-8edf-db5e33873f0f",
								"exec": [
									"\r",
									"\r",
									"pm.test(\"Status code\", function () {\r",
									"    pm.response.to.have.status(pm.collectionVariables.get(\"statuscode\"));\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "c7d5cfb8-d104-45ce-b27f-544b179b315e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"id\": \"{{dieticianid}}\",\r\n  \"ContactNumber\": \"{{contactnumber}}\",\r\n  \"DateOfBirth\": \"{{Dateofbirth}}\",\r\n  \"Education\": \"{{education}}\",\r\n  \"Email\": \"{{email}}\",\r\n  \"Firstname\": \"{{firstname}}\",\r\n  \"HospitalCity\":\" {{hospitalcity}}\",\r\n  \"HospitalName\": \"{{hospitalname}}\",\r\n  \"HospitalPincode\": \"{{hospitalpincode}}\",\r\n  \"HospitalStreet\":\"{{hospitalstreet}}\",\r\n  \"Lastname\": \"{{lastname}}\"\r\n \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_URL}}/dietician/{{dieticianid}}/"
					},
					"response": []
				},
				{
					"name": "UpdateDietician",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0bc97771-a44d-41e6-8223-3230175e1671",
								"exec": [
									"pm.collectionVariables.set(\"statuscode\", pm.iterationData.get('statuscode'));\r",
									"let statuscode1 = pm.collectionVariables.get(\"statuscode\");\r",
									"console.log(statuscode1);\r",
									"\r",
									"if (pm.iterationData.get(\"Request\") !== 'UpdateRequest') {\r",
									"    pm.execution.skipRequest();\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9930ae85-9889-442f-8edf-db5e33873f0f",
								"exec": [
									"\r",
									"\r",
									"pm.test(\"Status code\", function () {\r",
									"    pm.response.to.have.status(pm.collectionVariables.get(\"statuscode\"));\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "9b87989e-9e5b-4f6e-be96-0b349666d6f0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"id\": \"{{dieticianid}}\",\r\n  \"ContactNumber\": \"{{contactnumber}}\",\r\n  \"DateOfBirth\": \"{{Dateofbirth}}\",\r\n  \"Education\": \"{{education}}\",\r\n  \"Email\": \"{{email}}\",\r\n  \"Firstname\": \"{{firstname}}\",\r\n  \"HospitalCity\":\" {{hospitalcity}}\",\r\n  \"HospitalName\": \"{{hospitalname}}\",\r\n  \"HospitalPincode\": \"{{hospitalpincode}}\",\r\n  \"HospitalStreet\":\"{{hospitalstreet}}\",\r\n  \"Lastname\": \"{{lastname}}\"\r\n \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_URL}}/dietician/{{dieticianid}}"
					},
					"response": []
				},
				{
					"name": "GetDieticianByInvalidID",
					"id": "aa736f16-7931-45df-8ae6-972c68420573",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/dietician/{25665567}"
					},
					"response": []
				},
				{
					"name": "GetDieticianByInvalidEndpoint",
					"id": "27710a1c-a9b6-4fdd-b37a-c1edf66309e6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/{{dieticianId}}"
					},
					"response": []
				},
				{
					"name": "GetDieticianByNoAuth",
					"id": "fb268134-25d5-4a18-a8ba-cbfdbb035ac9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/dietician/{{dieticianId}}"
					},
					"response": []
				},
				{
					"name": "GetDietcianinfoByValidID",
					"id": "61a7ed2e-cae8-414d-9106-686a1269daa3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/dietician/{{dieticianId}}"
					},
					"response": []
				}
			],
			"id": "8743a1e3-504f-4e46-b409-678331ee8f67"
		},
		{
			"name": "Dietician",
			"item": [
				{
					"name": "Dietician_login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d0f80eff-ad62-4f09-b844-d07c880a9f8b",
								"exec": [
									"let resp = pm.response.json();\r",
									"pm.collectionVariables.set(\"Dietician_Token\", resp.token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6237db0f-0e85-4bd1-b186-f4b323ed46cf",
								"exec": [
									"// if (pm.info.iteration !== 0) { \r",
									"//       pm.execution.skipRequest();\r",
									"// }"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "60bf1bf0-7a9e-48ae-b06e-71b18465a256",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\": \"{{dieticianPsw}}\",\r\n    \"userLoginEmail\": \"{{dieticianEmail}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_URL}}/login"
					},
					"response": []
				},
				{
					"name": "N_GetAllPatients_Invalid_endpoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d45c3c7d-9141-406a-bab4-56d11c829c3d",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "c83f1170-1766-40fe-a1b1-29e04d848bcf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Dietician_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/patient1"
					},
					"response": [
						{
							"id": "dc99201f-1832-4323-917a-d12e78c4c895",
							"name": "GetAllPatients",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{base_URL}}/patient"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722658260&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=XeVGK79cmbhC0rPJ%2Fpt9TNzVXVeLOy60cKuH%2FFX%2FLOg%3D\"}]}"
								},
								{
									"key": "Reporting-Endpoints",
									"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722658260&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=XeVGK79cmbhC0rPJ%2Fpt9TNzVXVeLOy60cKuH%2FFX%2FLOg%3D"
								},
								{
									"key": "Nel",
									"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Aug 2024 04:11:00 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "[\n    {\n        \"patientId\": 468,\n        \"FirstName\": \"h\",\n        \"LastName\": \"d\",\n        \"ContactNumber\": \"1000000000\",\n        \"Email\": \"S124@acbd.com\",\n        \"Allergy\": \"Soy\",\n        \"FoodPreference\": \"jain\",\n        \"CuisineCategory\": \"Indian\",\n        \"FileMorbidity\": {\n            \"66ada9f04717cf471aaad20c\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66ada9f04717cf471aaad20c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1988-07-08\",\n        \"DieticianId\": 871,\n        \"Vitals\": {\n            \"66ada9f04717cf471aaad20c\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-03T03:54:24.117+00:00\"\n    }\n]"
						}
					]
				},
				{
					"name": "N_GetAllPatients_without_Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "10cbe64c-344e-4818-9988-bd7a8ef0a46b",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "c13043e3-377f-4ab2-9420-163b87360dfb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/patient"
					},
					"response": [
						{
							"id": "feaab1c3-d0fc-48d1-b394-86d6664246ad",
							"name": "GetAllPatients",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{base_URL}}/patient"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722658260&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=XeVGK79cmbhC0rPJ%2Fpt9TNzVXVeLOy60cKuH%2FFX%2FLOg%3D\"}]}"
								},
								{
									"key": "Reporting-Endpoints",
									"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722658260&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=XeVGK79cmbhC0rPJ%2Fpt9TNzVXVeLOy60cKuH%2FFX%2FLOg%3D"
								},
								{
									"key": "Nel",
									"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Aug 2024 04:11:00 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "[\n    {\n        \"patientId\": 468,\n        \"FirstName\": \"h\",\n        \"LastName\": \"d\",\n        \"ContactNumber\": \"1000000000\",\n        \"Email\": \"S124@acbd.com\",\n        \"Allergy\": \"Soy\",\n        \"FoodPreference\": \"jain\",\n        \"CuisineCategory\": \"Indian\",\n        \"FileMorbidity\": {\n            \"66ada9f04717cf471aaad20c\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66ada9f04717cf471aaad20c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1988-07-08\",\n        \"DieticianId\": 871,\n        \"Vitals\": {\n            \"66ada9f04717cf471aaad20c\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-03T03:54:24.117+00:00\"\n    }\n]"
						}
					]
				},
				{
					"name": "GetAllPatients",
					"id": "1e566add-363e-4c3a-83f3-53aed026f73f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Dietician_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/patient"
					},
					"response": [
						{
							"id": "caf3816f-800f-44e6-853e-f263a509a459",
							"name": "GetAllPatients",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{base_URL}}/patient"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722658260&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=XeVGK79cmbhC0rPJ%2Fpt9TNzVXVeLOy60cKuH%2FFX%2FLOg%3D\"}]}"
								},
								{
									"key": "Reporting-Endpoints",
									"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722658260&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=XeVGK79cmbhC0rPJ%2Fpt9TNzVXVeLOy60cKuH%2FFX%2FLOg%3D"
								},
								{
									"key": "Nel",
									"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Aug 2024 04:11:00 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "[\n    {\n        \"patientId\": 468,\n        \"FirstName\": \"h\",\n        \"LastName\": \"d\",\n        \"ContactNumber\": \"1000000000\",\n        \"Email\": \"S124@acbd.com\",\n        \"Allergy\": \"Soy\",\n        \"FoodPreference\": \"jain\",\n        \"CuisineCategory\": \"Indian\",\n        \"FileMorbidity\": {\n            \"66ada9f04717cf471aaad20c\": {\n                \"HbA1c\": \"6.5 %\",\n                \"Average Glucose\": \"131.0 mg/dl\"\n            }\n        },\n        \"FileMorbidityCondition\": {\n            \"66ada9f04717cf471aaad20c\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n        },\n        \"DateOfBirth\": \"1988-07-08\",\n        \"DieticianId\": 871,\n        \"Vitals\": {\n            \"66ada9f04717cf471aaad20c\": {\n                \"Weight\": 0,\n                \"Height\": 0,\n                \"Temperature\": 0,\n                \"SP\": 0,\n                \"DP\": 0\n            }\n        },\n        \"LastVisitDate\": \"2024-08-03T03:54:24.117+00:00\"\n    }\n]"
						}
					]
				},
				{
					"name": "N-create_Patient_invalid_endpt",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9278e75e-9340-4fff-b6c3-27740f54607e",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "27cd307c-b49b-4959-8cf1-5539bdd1082d",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "ce0e336e-5a4d-4ff3-bc77-f595a3f0f5db",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{Dietician_Token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "patientInfo",
									"type": "text",
									"value": "{ \"FirstName\": \"h\",\n\"LastName\": \"d\",\n\"ContactNumber\": \"1110000001\",\n\"Email\": \"S124@acbd.com\",\n\"Allergy\": \"Soy\",\n\"FoodPreference\": \"jain\",\n\"CuisineCategory\":\"Indian\",\n\"DateOfBirth\": \"1988-08-05\"}"
								},
								{
									"key": "file",
									"type": "file",
									"fileNotInWorkingDirectoryWarning": "This file isn't in your working directory. Teammates you share this request with won't be able to use this file. To make collaboration easier you can setup your working directory in Settings.",
									"filesNotInWorkingDirectory": [
										"9Xsx4k7uG/Diabetic and Hemogram Test_Thyrocare lab.pdf (1).pdf"
									],
									"src": "9Xsx4k7uG/Diabetic and Hemogram Test_Thyrocare lab.pdf (1).pdf"
								}
							]
						},
						"url": "{{base_URL}}/patient-"
					},
					"response": [
						{
							"id": "e02ed9d9-6f30-4d12-b9eb-bf4375ef8f34",
							"name": "errorMSg-create_Patient_invalid_endpt",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"type": "text",
											"value": "{ \"FirstName\": \"h\",\n\"LastName\": \"d\",\n\"ContactNumber\": \"1110000001\",\n\"Email\": \"S124@acbd.com\",\n\"Allergy\": \"Soy\",\n\"FoodPreference\": \"jain\",\n\"CuisineCategory\":\"Indian\",\n\"DateOfBirth\": \"1988-08-05\"}"
										},
										{
											"key": "file",
											"type": "file",
											"fileNotInWorkingDirectoryWarning": "This file isn't in your working directory. Teammates you share this request with won't be able to use this file. To make collaboration easier you can setup your working directory in Settings.",
											"filesNotInWorkingDirectory": [
												"9Xsx4k7uG/Diabetic and Hemogram Test_Thyrocare lab.pdf (1).pdf"
											],
											"src": "9Xsx4k7uG/Diabetic and Hemogram Test_Thyrocare lab.pdf (1).pdf"
										}
									]
								},
								"url": "{{base_URL}}/patient-"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722662425&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=g%2B4IVlAbI%2B0pq%2B40GMDfOjhpx6QeUrH%2BdUh4LEtet64%3D\"}]}"
								},
								{
									"key": "Reporting-Endpoints",
									"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722662425&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=g%2B4IVlAbI%2B0pq%2B40GMDfOjhpx6QeUrH%2BdUh4LEtet64%3D"
								},
								{
									"key": "Nel",
									"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Aug 2024 05:20:25 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"timestamp\": \"2024-08-03T05:20:25.532+00:00\",\n    \"status\": 401,\n    \"error\": \"Unauthorized\",\n    \"path\": \"/dietician/patient-\"\n}"
						}
					]
				},
				{
					"name": "N-create_Patient_without Auth Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9278e75e-9340-4fff-b6c3-27740f54607e",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "27cd307c-b49b-4959-8cf1-5539bdd1082d",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "07d95874-6ca3-49f5-8c52-2c89a449c1e6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "patientInfo",
									"type": "text",
									"value": "{ \"FirstName\": \"h\",\n\"LastName\": \"d\",\n\"ContactNumber\": \"1110000001\",\n\"Email\": \"S124@acbd.com\",\n\"Allergy\": \"Soy\",\n\"FoodPreference\": \"jain\",\n\"CuisineCategory\":\"Indian\",\n\"DateOfBirth\": \"1988-08-05\"}"
								},
								{
									"key": "file",
									"type": "file",
									"fileNotInWorkingDirectoryWarning": "This file isn't in your working directory. Teammates you share this request with won't be able to use this file. To make collaboration easier you can setup your working directory in Settings.",
									"filesNotInWorkingDirectory": [
										"9Xsx4k7uG/Diabetic and Hemogram Test_Thyrocare lab.pdf (1).pdf"
									],
									"src": "9Xsx4k7uG/Diabetic and Hemogram Test_Thyrocare lab.pdf (1).pdf"
								}
							]
						},
						"url": "{{base_URL}}/patient"
					},
					"response": [
						{
							"id": "726ae48a-9738-49ba-9fb0-ea16ec787f13",
							"name": "New Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"type": "text",
											"value": "{ \"FirstName\": \"h\",\n\"LastName\": \"d\",\n\"ContactNumber\": \"1110000000\",\n\"Email\": \"S124@acbd.com\",\n\"Allergy\": \"Soy\",\n\"FoodPreference\": \"jain\",\n\"CuisineCategory\":\"Indian\",\n\"DateOfBirth\": \"1988-07-05\"}"
										},
										{
											"key": "file",
											"type": "file",
											"src": "9Xsx4k7uG/Diabetic and Hemogram Test_Thyrocare lab.pdf (1).pdf"
										}
									]
								},
								"url": "{{base_URL}}/patient"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722658463&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=cy3qZMLxNz0Ecl%2BSb22A1a7HlV82viMWuUu5xAmRVm0%3D\"}]}"
								},
								{
									"key": "Reporting-Endpoints",
									"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722658463&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=cy3qZMLxNz0Ecl%2BSb22A1a7HlV82viMWuUu5xAmRVm0%3D"
								},
								{
									"key": "Nel",
									"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Aug 2024 04:14:23 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"patientId\": 472,\n    \"FirstName\": \"h\",\n    \"LastName\": \"d\",\n    \"ContactNumber\": \"1110000000\",\n    \"Email\": \"S124@acbd.com\",\n    \"Allergy\": \"Soy\",\n    \"FoodPreference\": \"jain\",\n    \"CuisineCategory\": \"Indian\",\n    \"FileMorbidity\": {\n        \"66adae9f4717cf471aaad21d\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66adae9f4717cf471aaad21d\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n    },\n    \"DateOfBirth\": \"1988-07-05\",\n    \"DieticianId\": 871,\n    \"Vitals\": {\n        \"66adae9f4717cf471aaad21d\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-08-03T04:14:23.627+00:00\"\n}"
						}
					]
				},
				{
					"name": "create_Patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9278e75e-9340-4fff-b6c3-27740f54607e",
								"exec": [
									"const response = pm.response.json();",
									"",
									"// // Extract the program name and program status",
									" const patientId = response.patientId;",
									"",
									" if (pm.response.code === 201) {",
									"   // Set collection variables for later use",
									"pm.collectionVariables.set(\"patientId\", patientId);",
									"pm.collectionVariables.set(\"patientEmail\", patientEmail);",
									" }",
									" console.log(\"patientId\", patientId);",
									"//Before storing collection variable validating",
									"pm.test(\"Token is stored as a collection variable\", function () {",
									"    pm.expect(pm.collectionVariables.get(\"patientId\")).to.eql(patientId);",
									"});",
									"pm.test(\"First name is not empty\", function () {",
									"    pm.expect(jsonData.FirstName).to.not.be.empty;",
									"});",
									"pm.test(\"Last name is not empty\", function () {",
									"    pm.expect(jsonData.LastName).to.not.be.empty;",
									"});",
									"pm.test(\"Email is not empty\",function(){",
									"    pm.expect(jsonData.Email).to.be.not.empty;",
									"});",
									"pm.test(\"ContactNumber is not empty\",function(){",
									"    pm.expect(jsonData.ContactNumber).to.be.not.empty;",
									"});",
									"pm.test(\"DateOfBirth is not empty\",function(){",
									"    pm.expect(jsonData.DateOfBirth).to.be.not.empty;",
									"});",
									"pm.test(\"Allergies is not empty\",function(){",
									"    pm.expect(jsonData.Allergy).to.be.not.empty;",
									"});",
									"",
									"pm.test(\"CuisineCategory is not empty\",function(){",
									"    pm.expect(jsonData.CuisineCategory).to.be.not.empty;",
									"});",
									"// Parse the response JSON",
									"let res = pm.response.json();",
									"",
									"// Extract the fileId",
									"let fileId = Object.keys(res.FileMorbidity)[0];",
									"",
									"// Save the fileId to a collection variable",
									"pm.collectionVariables.set(\"fileId\", fileId);",
									"",
									"// Optionally, log the fileId to verify",
									"console.log(\"fileId saved to collection variable: \", fileId);",
									"  ",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "27cd307c-b49b-4959-8cf1-5539bdd1082d",
								"exec": [
									"// if (pm.iterationData.get(\"Request\") !== 'CreatePatient') {\r",
									"//     pm.execution.skipRequest();\r",
									"// }"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "e7076d92-246f-4a29-87ba-be5679ce5ba8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Dietician_Token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "patientInfo",
									"type": "text",
									"value": "{ \"FirstName\": \"hjjjgn\",\n\"LastName\": \"dhjt\",\n\"ContactNumber\": \"1119070002\",\n\"Email\": \"Sss2341@acbd.com\",\n\"Allergy\": \"Soy\",\n\"FoodPreference\": \"jain\",\n\"CuisineCategory\":\"Indian\",\n\"DateOfBirth\": \"1969-08-05\"}"
								},
								{
									"key": "file",
									"type": "file",
									"fileNotInWorkingDirectoryWarning": "This file isn't in your working directory. Teammates you share this request with won't be able to use this file. To make collaboration easier you can setup your working directory in Settings.",
									"filesNotInWorkingDirectory": [
										"FoNGxVhz-/Diabetic and Hemogram Test_Thyrocare lab.pdf (1).pdf",
										"o8w0VOy_9/HyperThyroid_Report_final.pdf"
									],
									"src": "FoNGxVhz-/Diabetic and Hemogram Test_Thyrocare lab.pdf (1).pdf"
								}
							]
						},
						"url": "{{base_URL}}/patient"
					},
					"response": [
						{
							"id": "7067bf98-b111-4867-be0b-88abd48d223b",
							"name": "New Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"type": "text",
											"value": "{ \"FirstName\": \"h\",\n\"LastName\": \"d\",\n\"ContactNumber\": \"1110000000\",\n\"Email\": \"S124@acbd.com\",\n\"Allergy\": \"Soy\",\n\"FoodPreference\": \"jain\",\n\"CuisineCategory\":\"Indian\",\n\"DateOfBirth\": \"1988-07-05\"}"
										},
										{
											"key": "file",
											"type": "file",
											"src": "9Xsx4k7uG/Diabetic and Hemogram Test_Thyrocare lab.pdf (1).pdf"
										}
									]
								},
								"url": "{{base_URL}}/patient"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722658463&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=cy3qZMLxNz0Ecl%2BSb22A1a7HlV82viMWuUu5xAmRVm0%3D\"}]}"
								},
								{
									"key": "Reporting-Endpoints",
									"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722658463&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=cy3qZMLxNz0Ecl%2BSb22A1a7HlV82viMWuUu5xAmRVm0%3D"
								},
								{
									"key": "Nel",
									"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Aug 2024 04:14:23 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"patientId\": 472,\n    \"FirstName\": \"h\",\n    \"LastName\": \"d\",\n    \"ContactNumber\": \"1110000000\",\n    \"Email\": \"S124@acbd.com\",\n    \"Allergy\": \"Soy\",\n    \"FoodPreference\": \"jain\",\n    \"CuisineCategory\": \"Indian\",\n    \"FileMorbidity\": {\n        \"66adae9f4717cf471aaad21d\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66adae9f4717cf471aaad21d\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n    },\n    \"DateOfBirth\": \"1988-07-05\",\n    \"DieticianId\": 871,\n    \"Vitals\": {\n        \"66adae9f4717cf471aaad21d\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-08-03T04:14:23.627+00:00\"\n}"
						},
						{
							"id": "caaf56fa-1dc4-46bf-955e-6af4d619c92f",
							"name": "New Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"type": "text",
											"value": "{ \"FirstName\": \"h\",\n\"LastName\": \"d\",\n\"ContactNumber\": \"1110000000\",\n\"Email\": \"S124@acbd.com\",\n\"Allergy\": \"Soy\",\n\"FoodPreference\": \"jain\",\n\"CuisineCategory\":\"Indian\",\n\"DateOfBirth\": \"1988-07-05\"}"
										},
										{
											"key": "file",
											"type": "file",
											"src": "9Xsx4k7uG/Diabetic and Hemogram Test_Thyrocare lab.pdf (1).pdf"
										}
									]
								},
								"url": "{{base_URL}}/patient"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722658463&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=cy3qZMLxNz0Ecl%2BSb22A1a7HlV82viMWuUu5xAmRVm0%3D\"}]}"
								},
								{
									"key": "Reporting-Endpoints",
									"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722658463&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=cy3qZMLxNz0Ecl%2BSb22A1a7HlV82viMWuUu5xAmRVm0%3D"
								},
								{
									"key": "Nel",
									"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Aug 2024 04:14:23 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"patientId\": 472,\n    \"FirstName\": \"h\",\n    \"LastName\": \"d\",\n    \"ContactNumber\": \"1110000000\",\n    \"Email\": \"S124@acbd.com\",\n    \"Allergy\": \"Soy\",\n    \"FoodPreference\": \"jain\",\n    \"CuisineCategory\": \"Indian\",\n    \"FileMorbidity\": {\n        \"66adae9f4717cf471aaad21d\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66adae9f4717cf471aaad21d\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n    },\n    \"DateOfBirth\": \"1988-07-05\",\n    \"DieticianId\": 871,\n    \"Vitals\": {\n        \"66adae9f4717cf471aaad21d\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-08-03T04:14:23.627+00:00\"\n}"
						}
					]
				},
				{
					"name": "GetPatientsMorbidityDetails",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9e55a389-9817-4d76-9659-104ef45848b6",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Check if the response time is less than 500ms",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"// Check if the response has a JSON content type",
									"pm.test(\"Content-Type is application/json\", function () {",
									"    pm.response.to.have.header(\"Content-Type\", /application/json);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3e62f405-b007-4ecf-8294-bcc622ffde43",
								"exec": [
									"console.log(pm.info.iteration, pm.info.iterationCount)\r",
									"if ( pm.info.iteration < pm.info.iterationCount - 1) {\r",
									"    pm.execution.skipRequest();\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "2e1e84fe-14fc-4240-a100-79fdd84e1d5b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Dietician_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/patient/testReports/{{patientId}}"
					},
					"response": []
				},
				{
					"name": "update_Patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9278e75e-9340-4fff-b6c3-27740f54607e",
								"exec": [
									"const response = pm.response.json();",
									"",
									"// // Extract the program name and program status",
									" const patientId = response.patientId;",
									"",
									" if (pm.response.code === 200) {",
									"   // Set collection variables for later use",
									"pm.collectionVariables.set(\"patientId\", patientId);",
									" }",
									" console.log(\"patientId\", patientId);",
									"//Before storing collection variable validating",
									"pm.test(\"patientId is stored as a collection variable\", function () {",
									"    pm.expect(pm.collectionVariables.get(\"patientId\")).to.eql(patientId);",
									"});",
									"pm.test(\"First name is not empty\", function () {",
									"    pm.expect(jsonData.FirstName).to.not.be.empty;",
									"});",
									"pm.test(\"Last name is not empty\", function () {",
									"    pm.expect(jsonData.LastName).to.not.be.empty;",
									"});",
									"pm.test(\"Email is not empty\",function(){",
									"    pm.expect(jsonData.Email).to.be.not.empty;",
									"});",
									"pm.test(\"ContactNumber is not empty\",function(){",
									"    pm.expect(jsonData.ContactNumber).to.be.not.empty;",
									"});",
									"pm.test(\"DateOfBirth is not empty\",function(){",
									"    pm.expect(jsonData.DateOfBirth).to.be.not.empty;",
									"});",
									"pm.test(\"Allergies is not empty\",function(){",
									"    pm.expect(jsonData.Allergy).to.be.not.empty;",
									"});",
									"",
									"pm.test(\"CuisineCategory is not empty\",function(){",
									"    pm.expect(jsonData.CuisineCategory).to.be.not.empty;",
									"});",
									"// Parse the response JSON",
									"let res = pm.response.json();",
									"",
									"// Extract the fileId",
									"let fileId = Object.keys(res.FileMorbidity)[0];",
									"",
									"// Save the fileId to a collection variable",
									"pm.collectionVariables.set(\"fileId\", fileId);",
									"",
									"// Optionally, log the fileId to verify",
									"console.log(\"fileId saved to collection variable: \", fileId);",
									"  ",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "27cd307c-b49b-4959-8cf1-5539bdd1082d",
								"exec": [
									"if (pm.iterationData.get(\"Request\") !== 'UpdatePatient') {\r",
									"    pm.execution.skipRequest();\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "b9ef9a4f-dc0b-4522-b1eb-c97e958c85bf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Dietician_Token}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "patientInfo",
									"type": "text",
									"value": "{ \"FirstName\": \"Hello\",\n\"LastName\": \"Ninjas\",\n\"ContactNumber\": \"1112000000\",\n\"Email\": \"S124@acbd.com\",\n\"Allergy\": \"Soy\",\n\"FoodPreference\": \"jain\",\n\"CuisineCategory\":\"Indian\",\n\"DateOfBirth\": \"1999-07-05\"}"
								},
								{
									"key": "file",
									"type": "file",
									"fileNotInWorkingDirectoryWarning": "This file isn't in your working directory. Teammates you share this request with won't be able to use this file. To make collaboration easier you can setup your working directory in Settings.",
									"filesNotInWorkingDirectory": [
										"9Xsx4k7uG/Diabetic and Hemogram Test_Thyrocare lab.pdf (1).pdf"
									],
									"src": "9Xsx4k7uG/Diabetic and Hemogram Test_Thyrocare lab.pdf (1).pdf"
								}
							]
						},
						"url": "{{base_URL}}/patient/{{patientId}}"
					},
					"response": [
						{
							"id": "d0941967-718b-4bd4-98e1-c40ca44a72b1",
							"name": "New Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"type": "text",
											"value": "{ \"FirstName\": \"h\",\n\"LastName\": \"d\",\n\"ContactNumber\": \"1110000000\",\n\"Email\": \"S124@acbd.com\",\n\"Allergy\": \"Soy\",\n\"FoodPreference\": \"jain\",\n\"CuisineCategory\":\"Indian\",\n\"DateOfBirth\": \"1988-07-05\"}"
										},
										{
											"key": "file",
											"type": "file",
											"src": "9Xsx4k7uG/Diabetic and Hemogram Test_Thyrocare lab.pdf (1).pdf"
										}
									]
								},
								"url": "{{base_URL}}/patient"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722658463&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=cy3qZMLxNz0Ecl%2BSb22A1a7HlV82viMWuUu5xAmRVm0%3D\"}]}"
								},
								{
									"key": "Reporting-Endpoints",
									"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722658463&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=cy3qZMLxNz0Ecl%2BSb22A1a7HlV82viMWuUu5xAmRVm0%3D"
								},
								{
									"key": "Nel",
									"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 03 Aug 2024 04:14:23 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"patientId\": 472,\n    \"FirstName\": \"h\",\n    \"LastName\": \"d\",\n    \"ContactNumber\": \"1110000000\",\n    \"Email\": \"S124@acbd.com\",\n    \"Allergy\": \"Soy\",\n    \"FoodPreference\": \"jain\",\n    \"CuisineCategory\": \"Indian\",\n    \"FileMorbidity\": {\n        \"66adae9f4717cf471aaad21d\": {\n            \"HbA1c\": \"6.5 %\",\n            \"Average Glucose\": \"131.0 mg/dl\"\n        }\n    },\n    \"FileMorbidityCondition\": {\n        \"66adae9f4717cf471aaad21d\": \"Prediabetic \\nBlood Pressure: Hypotension \\n\"\n    },\n    \"DateOfBirth\": \"1988-07-05\",\n    \"DieticianId\": 871,\n    \"Vitals\": {\n        \"66adae9f4717cf471aaad21d\": {\n            \"Weight\": 0,\n            \"Height\": 0,\n            \"Temperature\": 0,\n            \"SP\": 0,\n            \"DP\": 0\n        }\n    },\n    \"LastVisitDate\": \"2024-08-03T04:14:23.627+00:00\"\n}"
						}
					]
				},
				{
					"name": "UpdateAddNewReprtsWithVital",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da827469-56e0-438e-83dd-5441a9581a42",
								"exec": [
									"const response = pm.response.json();",
									"",
									"// // Extract the program name and program status",
									" const patientId = response.patientId;",
									"",
									" if (pm.response.code === 200) {",
									"   // Set collection variables for later use",
									"pm.collectionVariables.set(\"patientId\", patientId);",
									" }",
									" console.log(\"patientId\", patientId);",
									"//Before storing collection variable validating",
									"pm.test(\"patientId is stored as a collection variable\", function () {",
									"    pm.expect(pm.collectionVariables.get(\"patientId\")).to.eql(patientId);",
									"});",
									"pm.test(\"First name is not empty\", function () {",
									"    pm.expect(jsonData.FirstName).to.not.be.empty;",
									"});",
									"pm.test(\"Last name is not empty\", function () {",
									"    pm.expect(jsonData.LastName).to.not.be.empty;",
									"});",
									"pm.test(\"Email is not empty\",function(){",
									"    pm.expect(jsonData.Email).to.be.not.empty;",
									"});",
									"pm.test(\"ContactNumber is not empty\",function(){",
									"    pm.expect(jsonData.ContactNumber).to.be.not.empty;",
									"});",
									"pm.test(\"DateOfBirth is not empty\",function(){",
									"    pm.expect(jsonData.DateOfBirth).to.be.not.empty;",
									"});",
									"pm.test(\"Allergies is not empty\",function(){",
									"    pm.expect(jsonData.Allergy).to.be.not.empty;",
									"});",
									"",
									"pm.test(\"CuisineCategory is not empty\",function(){",
									"    pm.expect(jsonData.CuisineCategory).to.be.not.empty;",
									"});",
									"// Parse the response JSON",
									"let res = pm.response.json();",
									"",
									"// Extract the fileId",
									"let fileId = Object.keys(res.FileMorbidity)[0];",
									"",
									"// Save the fileId to a collection variable",
									"pm.collectionVariables.set(\"fileId\", fileId);",
									"",
									"// Optionally, log the fileId to verify",
									"console.log(\"fileId saved to collection variable: \", fileId);",
									"",
									"// Check if the response time is less than 500ms",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"// Check if the response has a JSON content type",
									"pm.test(\"Content-Type is application/json\", function () {",
									"    pm.response.to.have.header(\"Content-Type\", /application/json);",
									"});",
									"",
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"message\": { \"type\": \"string\" },",
									"        \"status\": { \"type\": \"string\" },",
									"        \"updatedUser\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"FirstName\": { \"type\": \"string\" },",
									"                \"LastName\": { \"type\": \"string\" },",
									"                \"ContactNumber\": { \"type\": \"string\" },",
									"                \"Email\": { \"type\": \"string\" },",
									"                \"Allergy\": { \"type\": \"string\" },",
									"                \"FoodPreference\": { \"type\": \"string\" },",
									"                \"CuisineCategory\": { \"type\": \"string\" },",
									"                \"DateOfBirth\": { \"type\": \"string\" }",
									"            },",
									"            \"required\": [\"FirstName\", \"LastName\", \"ContactNumber\", \"Email\", \"Allergy\", \"FoodPreference\", \"CuisineCategory\", \"DateOfBirth\"]",
									"        }",
									"    },",
									"    \"required\": [\"message\", \"status\", \"updatedUser\"]",
									"};",
									"",
									"pm.test(\"Schema is valid\", function () {",
									"    pm.response.to.have.jsonSchema(schema);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "f21df221-d3e6-4138-8138-f584d1c4d837",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Dietician_Token}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "patientInfo",
									"type": "text",
									"value": "{ \"FirstName\": \"setabcr\",\n\"LastName\": \"sdetyze\",\n\"ContactNumber\": \"9123656789\",\n\"Email\": \"asddetb@gmail.com\",\n\"Allergy\": \"PECAN\",\n\"FoodPreference\": \"Vegan\",\n\"CuisineCategory\":\"Indian\",\n\"DateOfBirth\": \"1985-12-14\"\n}\n"
								},
								{
									"key": "Reports",
									"type": "file",
									"fileNotInWorkingDirectoryWarning": "This file isn't in your working directory. Teammates you share this request with won't be able to use this file. To make collaboration easier you can setup your working directory in Settings.",
									"filesNotInWorkingDirectory": [
										"_DuXivL8A/Diabetic and Hemogram Test_Thyrocare lab.pdf.pdf"
									],
									"src": "_DuXivL8A/Diabetic and Hemogram Test_Thyrocare lab.pdf.pdf"
								},
								{
									"key": "vitals",
									"value": "{\n       “Weight“ : 45.0,\n       “Height” : 5.5,\n        “Temperature” : 99.0,\n        “SP” : 4,\n        “DP” : 5\n \n             \t}\n",
									"type": "text"
								}
							]
						},
						"url": "{{base_URL}}/patient/{{patientId}}"
					},
					"response": []
				},
				{
					"name": "UpdateAddNewReprtswithoutVital",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da827469-56e0-438e-83dd-5441a9581a42",
								"exec": [
									"const response = pm.response.json();",
									"",
									"// // Extract the program name and program status",
									" const patientId = response.patientId;",
									"",
									" if (pm.response.code === 200) {",
									"   // Set collection variables for later use",
									"pm.collectionVariables.set(\"patientId\", patientId);",
									" }",
									" console.log(\"patientId\", patientId);",
									"//Before storing collection variable validating",
									"pm.test(\"patientId is stored as a collection variable\", function () {",
									"    pm.expect(pm.collectionVariables.get(\"patientId\")).to.eql(patientId);",
									"});",
									"pm.test(\"First name is not empty\", function () {",
									"    pm.expect(jsonData.FirstName).to.not.be.empty;",
									"});",
									"pm.test(\"Last name is not empty\", function () {",
									"    pm.expect(jsonData.LastName).to.not.be.empty;",
									"});",
									"pm.test(\"Email is not empty\",function(){",
									"    pm.expect(jsonData.Email).to.be.not.empty;",
									"});",
									"pm.test(\"ContactNumber is not empty\",function(){",
									"    pm.expect(jsonData.ContactNumber).to.be.not.empty;",
									"});",
									"pm.test(\"DateOfBirth is not empty\",function(){",
									"    pm.expect(jsonData.DateOfBirth).to.be.not.empty;",
									"});",
									"pm.test(\"Allergies is not empty\",function(){",
									"    pm.expect(jsonData.Allergy).to.be.not.empty;",
									"});",
									"",
									"pm.test(\"CuisineCategory is not empty\",function(){",
									"    pm.expect(jsonData.CuisineCategory).to.be.not.empty;",
									"});",
									"// Parse the response JSON",
									"let res = pm.response.json();",
									"",
									"// Extract the fileId",
									"let fileId = Object.keys(res.FileMorbidity)[0];",
									"",
									"// Save the fileId to a collection variable",
									"pm.collectionVariables.set(\"fileId\", fileId);",
									"",
									"// Optionally, log the fileId to verify",
									"console.log(\"fileId saved to collection variable: \", fileId);",
									"",
									"// Check if the response time is less than 500ms",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"// Check if the response has a JSON content type",
									"pm.test(\"Content-Type is application/json\", function () {",
									"    pm.response.to.have.header(\"Content-Type\", /application/json);",
									"});",
									"",
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"message\": { \"type\": \"string\" },",
									"        \"status\": { \"type\": \"string\" },",
									"        \"updatedUser\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"FirstName\": { \"type\": \"string\" },",
									"                \"LastName\": { \"type\": \"string\" },",
									"                \"ContactNumber\": { \"type\": \"string\" },",
									"                \"Email\": { \"type\": \"string\" },",
									"                \"Allergy\": { \"type\": \"string\" },",
									"                \"FoodPreference\": { \"type\": \"string\" },",
									"                \"CuisineCategory\": { \"type\": \"string\" },",
									"                \"DateOfBirth\": { \"type\": \"string\" }",
									"            },",
									"            \"required\": [\"FirstName\", \"LastName\", \"ContactNumber\", \"Email\", \"Allergy\", \"FoodPreference\", \"CuisineCategory\", \"DateOfBirth\"]",
									"        }",
									"    },",
									"    \"required\": [\"message\", \"status\", \"updatedUser\"]",
									"};",
									"",
									"pm.test(\"Schema is valid\", function () {",
									"    pm.response.to.have.jsonSchema(schema);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "bc3b14fc-7c4c-4257-8e4e-9855f8ce0ddf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Dietician_Token}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "patientInfo",
									"type": "file",
									"src": "yRo6FHDny/patient.json"
								},
								{
									"key": "Reports",
									"type": "file",
									"fileNotInWorkingDirectoryWarning": "This file isn't in your working directory. Teammates you share this request with won't be able to use this file. To make collaboration easier you can setup your working directory in Settings.",
									"filesNotInWorkingDirectory": [
										"_DuXivL8A/Diabetic and Hemogram Test_Thyrocare lab.pdf.pdf"
									],
									"src": "_DuXivL8A/Diabetic and Hemogram Test_Thyrocare lab.pdf.pdf"
								}
							]
						},
						"url": "{{base_URL}}/patient/{{patientId}}"
					},
					"response": []
				},
				{
					"name": "GetOperatioRetrievePatientfilebyFileId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2e8e1614-eb68-476c-9e46-7fbbcff663c5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Check if the response time is less than 500ms",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"// Check if the response has a JSON content type",
									"pm.test(\"Content-Type is application/json\", function () {",
									"    pm.response.to.have.header(\"Content-Type\", /application/json);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "18f35a46-9c66-4ccd-b567-2c79a99718df",
								"exec": [
									"console.log(pm.info.iteration, pm.info.iterationCount)\r",
									"if ( pm.info.iteration < pm.info.iterationCount - 1) {\r",
									"    pm.execution.skipRequest();\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "37596610-c6cd-42ca-bed7-aa255014d81e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Dietician_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/patient/testReports/viewFile/{{fileId}}"
					},
					"response": []
				}
			],
			"id": "76a595f1-6075-403b-9569-eb87b5cda9ce"
		},
		{
			"name": "Patient",
			"item": [
				{
					"name": "PatientLogin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d0f80eff-ad62-4f09-b844-d07c880a9f8b",
								"exec": [
									"let resp = pm.response.json();\r",
									"pm.collectionVariables.set(\"Dietician_Token\", resp.token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6237db0f-0e85-4bd1-b186-f4b323ed46cf",
								"exec": [
									"// if (pm.info.iteration !== 0) { \r",
									"//       pm.execution.skipRequest();\r",
									"// }"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "4a60463d-5ab4-461d-8790-75c1de474665",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\": \"{{patientPsw}}\",\r\n    \"userLoginEmail\": \"{{patientEmail}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_URL}}/login"
					},
					"response": []
				},
				{
					"name": "N_GetPatientfilebyFileId _Without_Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "432fe67f-80c6-4368-bb92-007d4877655e",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8745352a-7e0e-4623-bb7c-bd866825aaf9",
								"exec": [
									"console.log(pm.info.iteration, pm.info.iterationCount)\r",
									"if ( pm.info.iteration < pm.info.iterationCount - 1) {\r",
									"    pm.execution.skipRequest();\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "3f4f5974-850b-4998-83ef-ba006bf2db90",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/patient/testReports/viewFile/{{fileId}}"
					},
					"response": []
				},
				{
					"name": "N_GetPatientfilebyFileId_Invalid_endPoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e928ca12-4ef4-4e26-83ee-cea98c228c82",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "57dd6ea4-a2d2-4801-92a7-2e440c7e6e8c",
								"exec": [
									"console.log(pm.info.iteration, pm.info.iterationCount)\r",
									"if ( pm.info.iteration < pm.info.iterationCount - 1) {\r",
									"    pm.execution.skipRequest();\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "4d219272-ade5-4380-a952-b6f859dfe4bd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Dietician_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/patient/testReports/viewFile/fieldId"
					},
					"response": []
				},
				{
					"name": "GetPatientfilebyFileId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2e8e1614-eb68-476c-9e46-7fbbcff663c5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Check if the response time is less than 500ms",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"// Check if the response has a JSON content type",
									"pm.test(\"Content-Type is application/json\", function () {",
									"    pm.response.to.have.header(\"Content-Type\", /application/json);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "18f35a46-9c66-4ccd-b567-2c79a99718df",
								"exec": [
									"console.log(pm.info.iteration, pm.info.iterationCount)\r",
									"if ( pm.info.iteration < pm.info.iterationCount - 1) {\r",
									"    pm.execution.skipRequest();\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "b6357206-b3cf-4381-9a2c-e5c321d7dbf1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Dietician_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/patient/testReports/viewFile/{{fileId}}"
					},
					"response": []
				},
				{
					"name": "N_GetPatientsMorbidityDetailswithout_Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f71989ea-6731-44c7-ac24-132333a5fde2",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "f2be467c-cf84-4d5a-8591-1790d27de7eb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/patient/testReports/patientId"
					},
					"response": []
				},
				{
					"name": "N_GetPatientsMorbidityDetails_invalid_Endpoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "261986ef-b8ab-4052-927c-1f15b4741328",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3327b0ef-615e-49d1-ae74-56fe715fa7ec",
								"exec": [
									"console.log(pm.info.iteration, pm.info.iterationCount)\r",
									"if ( pm.info.iteration < pm.info.iterationCount - 1) {\r",
									"    pm.execution.skipRequest();\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "9c2ec3f1-8a13-4980-9171-16f4b7c8a147",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Dietician_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/patient/testReports/patientId"
					},
					"response": []
				},
				{
					"name": "GetPatientsMorbidityDetails",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9e55a389-9817-4d76-9659-104ef45848b6",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Check if the response time is less than 500ms",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"// Check if the response has a JSON content type",
									"pm.test(\"Content-Type is application/json\", function () {",
									"    pm.response.to.have.header(\"Content-Type\", /application/json);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3e62f405-b007-4ecf-8294-bcc622ffde43",
								"exec": [
									"console.log(pm.info.iteration, pm.info.iterationCount)\r",
									"if ( pm.info.iteration < pm.info.iterationCount - 1) {\r",
									"    pm.execution.skipRequest();\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "a06d726f-f72c-467a-a8ae-1f5667ded6d5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Dietician_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/patient/testReports/{{patientId}}"
					},
					"response": []
				}
			],
			"id": "79efb4d0-725e-4043-a8c5-75e6f8acaaac"
		},
		{
			"name": "Morbidity",
			"item": [
				{
					"name": "Get all Morbidities",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "553b74a4-b57c-44bb-97bc-fde29514a318",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "011bbad4-f72f-4c7a-92c2-e4f9fe37c560",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/morbidity"
					},
					"response": []
				},
				{
					"name": "Retrieve Morbidity condition by Test name(Fasting Glucose)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bad9543a-a855-45c4-8152-a1f877738dc7",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "4b9295a6-f5c9-492e-8f21-1bf5d3f1ce88",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/morbidity/Fasting Glucose"
					},
					"response": []
				},
				{
					"name": "Retrieve Morbidity condition by Test name(Average Glucose)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e87022e8-eb5b-4d79-9ac2-18ebea33886a",
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "90c5ab08-e33f-4be6-844a-427bd651bb47",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/morbidity/Average Glucose"
					},
					"response": []
				},
				{
					"name": "Retrieve Morbidity condition by Test name(Plasma Glucose)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93b0622b-9e60-4ac5-b2c0-1dc6021c0bd4",
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "a8f0bcfc-f67d-470f-aa16-3f0543883063",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/morbidity/Plasma Glucose"
					},
					"response": []
				},
				{
					"name": "Retrieve Morbidity condition by Test name(Thyroid/TSH)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b40e3f53-dee7-4a8c-9782-292b38e2bb70",
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "18288117-188a-42e4-b4f8-d353d2c08e1f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/morbidity/TSH"
					},
					"response": []
				},
				{
					"name": "Retrieve Morbidity condition by Test name(Thyroid/T3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ce56d6f-d83f-4b6c-97c4-c2ea361641f7",
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "dd96c12c-654b-44ee-a36a-bd907ee17b7d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/morbidity/T3"
					},
					"response": []
				},
				{
					"name": "Retrieve Morbidity condition by Test name(Thyroid/T4)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e2a0e98-7729-4f8d-af3f-f8e31b8551e6",
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "df321cb3-2048-468c-9994-766d30d101b6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/morbidity/T4"
					},
					"response": []
				},
				{
					"name": "Morbidities with valid Dietician bearer token and valid End point",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "16a86129-171a-4365-b454-5e830e09a2ef",
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "e754616c-9561-4c60-9a49-bbb8d27d9955",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Dietician_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/morbidity"
					},
					"response": []
				},
				{
					"name": "N-Morbidities with valid Dietician bearer token and Invalid End point Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5365ac73-865b-4227-b808-6d3276d8e827",
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "33ee56d2-a3c2-45bf-a8f4-fe59b065f83e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJUZWFtNEBnbWFpbC5jb20iLCJpYXQiOjE3MjI2MjE4ODIsImV4cCI6MTcyMjY1MDY4Mn0.tntmQ9i9uPNGEesMN_M7_FEz2Keub5IcadCzj5hSbBk0F4SGB80Sh4PJDcBbKKAvXB-7Z0cmalCQ6dnlENGNOg"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/morbidit"
					},
					"response": []
				},
				{
					"name": "N-Morbidities with invalid dietician bearer token and valid End point",
					"id": "064b33a1-595b-46fe-8a9b-5fc11ea759f5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJUZWFtNEBnbWFpbC5jb20iLCJpYXQiOjE3MjI2MjE4ODIsImV4cCI6MTcyMjY1MDY4Mn0.tntmQ9i9uPNGEesMN_M7_FEz2Keub5IcadCzj5hSbBk0F4SGB80Sh4PJDcBbKKAvXB-7Z0cmalCQ6dnlENG"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/morbidity"
					},
					"response": []
				},
				{
					"name": "N-Morbidities with invalid dietician bearer token and invalid End point",
					"id": "8b0517bc-4d15-4a88-8e44-bebea1a63f75",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJUZWFtNEBnbWFpbC5jb20iLCJpYXQiOjE3MjI2MjE4ODIsImV4cCI6MTcyMjY1MDY4Mn0.tntmQ9i9uPNGEesMN_M7_FEz2Keub5IcadCzj5hSbBk0F4SGB80Sh4PJDcBbKKAvXB-7Z0cmalCQ6dnlENG"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/morbi"
					},
					"response": []
				},
				{
					"name": "N-Morbidities without Dietician bearer token and valid End point",
					"id": "bbb804c7-cee3-47c6-84c7-140b3fa0c108",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/morbidity"
					},
					"response": []
				},
				{
					"name": "N-Delete_PatientByInval-ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3fca5f6a-3fc4-4a98-bfc6-ac3941273341",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "27b24560-c302-4674-921d-c0d925891b98",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "20cffdc6-0f7e-484a-889e-708f073a5b1e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Dietician_Token}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "{{base_URL}}/patient/{{patd}}"
					},
					"response": []
				},
				{
					"name": "N-Delete_PatientByInval-endpt",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5298775c-b9e4-4df4-a706-fcdfeaf8c625",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "67b72e54-41c4-4732-9157-650a761ff802",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "ee669b80-5105-4e14-97d7-d325581f0f21",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Dietician_Token}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "{{base_URL}}/pat/{{patientId}}"
					},
					"response": []
				},
				{
					"name": "N-Delete_PatientById-noAuth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "85d5ef0e-799e-466f-b4a8-7d736e96b1b5",
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5c78bf13-5e96-41b2-b7d3-04128ff457ff",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "7e10e1bc-f82b-4bfa-b1d0-a742abfb049b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": "{{base_URL}}/patient/{{patientId}}"
					},
					"response": []
				},
				{
					"name": "Delete_PatientById",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "87dd2496-6e81-4716-ba83-e7dba4ee700d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6aef159b-84e6-42f2-87cc-66ff0de7d380",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "143a7951-681b-4555-99f5-a58382291da1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Dietician_Token}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "{{base_URL}}/patient/{{patientId}}"
					},
					"response": []
				},
				{
					"name": "DeletedieticanByNoAuth",
					"id": "aa68ee76-6657-48c3-96e5-e2f75a4b78c2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": "{{base_URL}}/dietician/{{dietician_id}}"
					},
					"response": []
				},
				{
					"name": "DeletedieticanByInvdID",
					"id": "991c95e1-96ed-44ee-ab1e-abe78b611eac",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "{{base_URL}}/dietician/{{132187}}}"
					},
					"response": []
				},
				{
					"name": "DeletedieticanByVldID",
					"id": "abc139b1-06b6-40d0-800c-9ba1ccac2efe",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "{{base_URL}}/dietician/{{dieticianId}}"
					},
					"response": []
				},
				{
					"name": "LogoutwithNoAuth",
					"id": "5cbdb153-832f-4e89-826e-4dae09f4da1d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/logoutdietician"
					},
					"response": []
				},
				{
					"name": "Logoutwithinvalidendpoint",
					"id": "c664ea98-e140-49d6-8866-88ff38d87664",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/logoutdietician123"
					},
					"response": []
				},
				{
					"name": "Logoutwithvalidendpoint",
					"id": "2cb2551c-8cdb-4645-a6e5-30ba2fc8e988",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Admin_Token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_URL}}/logoutdietician"
					},
					"response": []
				}
			],
			"id": "63eadd0b-84d2-47a1-9f83-f26f1d7e107f"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "0f068746-cfbb-4508-876d-f3d500e806ec",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "efe38c16-d892-4c86-9d7d-9a486cd15982",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Admin_Token",
			"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJUZWFtNEBnbWFpbC5jb20iLCJpYXQiOjE3MjI3NDIzNDEsImV4cCI6MTcyMjc3MTE0MX0.ZcfdvI8GCgNBq6Ke1fHpIOK3UV1VJB8ZRmpsGmJK-MQl5lYdQ_2frr3EAzUURAVdEhlimxPevqZDwtqPMlltNQ"
		},
		{
			"key": "AdminEmail",
			"value": "Team4@gmail.com",
			"type": "string"
		},
		{
			"key": "AdminPsw",
			"value": "test",
			"type": "string"
		},
		{
			"key": "base_URL",
			"value": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician",
			"type": "string"
		},
		{
			"key": "patientPsw",
			"value": "test"
		},
		{
			"key": "dieticianId",
			"value": ""
		},
		{
			"key": "dieticianPsw",
			"value": ""
		},
		{
			"key": "dieticianEmail",
			"value": ""
		},
		{
			"key": "Dietician_Token",
			"value": ""
		},
		{
			"key": "patientId",
			"value": ""
		},
		{
			"key": "fileId",
			"value": ""
		},
		{
			"value": ""
		},
		{
			"key": "statuscode",
			"value": ""
		}
	]
}